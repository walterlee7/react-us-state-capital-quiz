{"version":3,"sources":["App.jsx","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","gameTime","newTime","start","end","score","correctClicks","wrongClicks","totalClicks","strQuestions","currentQuestion","corrId","thisId","container","clicked","answered","timeToggle","startGame","bind","assertThisInitialized","setupGame","by","startTimer","stopTimer","clearTimer","clearScore","updateScore","updateTimer","nextQuestion","lastQuestion","constructQuestionPanel","constructAnswer","setState","Date","s","$","html","setInterval","gameDuration","totalSeconds","Math","round","minutes","floor","seconds","pad","toString","substring","length","hide","clearTimeout","show","e","isNaN","nT","remove","fetch","then","res","json","data","_this2","arrQuestions","sort","i","arrAnswers","JSON","parse","answers","j","id","path","reverse","primer","get","obj","len","split","prime","a","b","A","B","q","_this3","qText","aHtml","qHtml","correct","aText","questionLayout","append","addClass","ah","height","aw","width","css","on","parseInt","currentTarget","tC","cC","removeClass","off","cQ","fadeOut","wC","animate","opacity","aTxt","aId","aClicked","aCorrect","extraClass","console","log","fS","fT","_this4","react_default","createElement","react","className","style","marginTop","minHeight","position","backgroundColor","paddingLeft","onClick","cursor","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55496020.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport $ from 'jquery';\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            gameTime: 0,\n            newTime: 0,\n            start: 0,\n            end: 0,\n            score: 0,\n            correctClicks: 0,\n            wrongClicks: 0,\n            totalClicks: 0,\n            strQuestions: [],\n            currentQuestion: 0,\n            corrId: 0,\n            thisId: 100,\n            container: \"\",\n            clicked: 100,\n            answered: 100,\n            timeToggle: true,\n        };\n\n        this.startGame = this.startGame.bind(this);\n        this.setupGame = this.setupGame.bind(this);\n        this.by = this.by.bind(this);\n        this.startTimer = this.startTimer.bind(this);\n        this.stopTimer = this.stopTimer.bind(this);\n        this.clearTimer = this.clearTimer.bind(this);\n        this.clearScore = this.clearScore.bind(this);\n        this.updateScore = this.updateScore.bind(this);\n        this.updateTimer = this.updateTimer.bind(this);\n        this.nextQuestion = this.nextQuestion.bind(this);\n        this.lastQuestion = this.lastQuestion.bind(this);\n        this.constructQuestionPanel = this.constructQuestionPanel.bind(this);\n        this.constructAnswer = this.constructAnswer.bind(this);\n    }\n\n\n    componentDidMount() {\n        this.setupGame();\n        this.startTimer();\n    }\n\n    startTimer() {\n\n        this.setState({\n            start: new Date()\n        })\n\n        let s = this.state.start;\n\n        $('#timer').html('0:00');\n        $('#score').html('Current Score: 0%');\n\n        this.setState({\n            gameTime: setInterval(function () {\n                let gameDuration = new Date() - s;\n                let totalSeconds = Math.round(gameDuration / 1000);\n                var minutes = Math.floor(totalSeconds / 60);\n                var seconds = totalSeconds % 60;\n                var pad = \"00\";\n                pad = pad.toString();\n                seconds = seconds.toString();\n                seconds = pad.substring(0, pad.length - seconds.length) + seconds;\n                let newTime = minutes + \":\" + seconds;\n                $('#timer').html(newTime);\n            }, 1000)\n        })\n    }\n\n    stopTimer() {\n\n        this.setState(state => ({\n            timeToggle: !state.timeToggle\n        }))\n\n        if (this.state.timeToggle === true) {\n            $('.q-header').hide();\n            $('.q-container').hide();\n            this.setState({\n                end: new Date()\n            })\n\n            let gameDuration = new Date() - this.state.end;\n            let totalSeconds = Math.round(gameDuration / 1000);\n            var minutes = Math.floor(totalSeconds / 60);\n            var seconds = totalSeconds % 60;\n            var pad = \"00\";\n            pad = pad.toString();\n            seconds = seconds.toString();\n            seconds = pad.substring(0, pad.length - seconds.length) + seconds;\n            let newTime = minutes + \":\" + seconds;\n            $('#timer').html(newTime);\n\n            this.setState({\n                gameTime: newTime\n            })\n\n            clearTimeout(this.state.gameTime);\n        } else {\n            $('.q-header').show();\n            $('.q-container').show();\n            let e = this.state.end;\n            let s = this.state.start;\n            this.setState({\n                gameTime: setInterval(function () {\n                    let gameDuration = e - s;\n                    let totalSeconds = Math.round(gameDuration / 1000);\n                    var minutes = Math.floor(totalSeconds / 60);\n                    var seconds = totalSeconds % 60;\n                    var pad = \"00\";\n                    pad = pad.toString();\n                    seconds = seconds.toString();\n                    seconds = pad.substring(0, pad.length - seconds.length) + seconds;\n                    let newTime = minutes + \":\" + seconds;\n                    $('#timer').html(newTime);\n                }, 1000)\n            })\n        }\n    }\n\n    clearTimer() {\n        this.setState({\n            end: new Date()\n        })\n        clearTimeout(this.state.gameTime);\n    }\n\n    clearScore() {\n        this.setState({\n            score: 0,\n            correctClicks: 0,\n            wrongClicks: 0,\n            totalClicks: 0,\n        })\n        $(\"#score\").html(\"Score: 0%\");\n    }\n\n    updateScore() {\n\n        // console.log('cC ' + this.state.correctClicks);\n        // console.log('tC ' + this.state.totalClicks);\n\n        this.setState({\n            score: Math.round(this.state.correctClicks / this.state.totalClicks * 100)\n        })\n\n        if (!isNaN(this.state.score) && this.state.score >= 0) {\n            $(\"#score\").html(\"Score: \" + this.state.score + \"%\");\n        } else {\n            $(\"#score\").html(\"\");\n        }\n    }\n\n    updateTimer() {\n\n        this.setState({\n            end: new Date()\n        })\n\n        let e = this.state.end;\n\n        // console.log('e ' + e);\n\n        let gameDuration = e - this.state.start;\n\n        // console.log('gameDuration ' + gameDuration);\n\n        let totalSeconds = Math.round(gameDuration / 1000);\n        var minutes = Math.floor(totalSeconds / 60);\n        var seconds = totalSeconds % 60;\n        var pad = \"00\";\n        pad = pad.toString();\n        seconds = seconds.toString();\n        seconds = pad.substring(0, pad.length - seconds.length) + seconds;\n        let nT = minutes + \":\" + seconds;\n\n\n\n        this.setState({\n            newTime: nT\n        })\n\n        // console.log('newtime ' + nT);\n    }\n\n    async setupGame() {\n        this.clearTimer();\n        this.clearScore();\n        $(\"#HUD\").show();\n        $(\"#optionsRight\").show();\n        $(\"#gameWrapper\").html(\"\");\n        $(\".q-container\").remove();\n        $(\".a-wrapper\").remove();\n        $(\".q-wrapper\").remove();\n        $(\".final\").remove();\n        $(\".fScore\").remove();\n        $(\".fTime\").remove();\n\n        await this.setState({\n            currentQuestion: 1,\n        });\n\n        // console.log(this.state.currentQuestion);\n\n        await this.setState({\n            container: $(\"#gamewrapper\"),\n        });\n\n        await fetch('./questions.json')\n            .then((res) => {\n                return res.json();\n            })\n            .then((data) => {\n                this.setState({ strQuestions: data });\n            });\n\n        // console.log(this.state.strQuestions);\n\n        let arrQuestions = [];\n        arrQuestions = this.state.strQuestions;\n\n        // console.log(arrQuestions);\n\n        arrQuestions.sort(this.by(\"qSortOrder\"))\n\n        let i, j;\n        for (i = 0; i < arrQuestions.length; i++) {\n            arrQuestions[i].arrAnswers = JSON.parse(arrQuestions[i].answers)\n            arrQuestions[i].arrAnswers.sort(this.by(\"id\"))\n            for (j = 0; j < arrQuestions[i].arrAnswers.length; j++) {\n                arrQuestions[i].arrAnswers[j].id = j;\n            }\n        }\n        this.startGame(arrQuestions);\n    }\n\n    by(path, reverse, primer, then) {\n        var get = function (obj, path) {\n            if (path) {\n                path = path.split('.');\n                for (var i = 0, len = path.length - 1; i < len; i++) {\n                    obj = obj[path[i]];\n                };\n                return obj[path[len]];\n            }\n            return obj;\n        },\n            prime = function (obj) {\n                return primer ? primer(get(obj, path)) : get(obj, path);\n            };\n\n        return function (a, b) {\n            var A = prime(a),\n                B = prime(b);\n\n            return (\n                (A < B) ? -1 :\n                    (A > B) ? 1 :\n                        (typeof then === 'function') ? then(a, b) : 0\n            ) * [1, -1][+!!reverse];\n        };\n    };\n\n    startGame(data) {\n        this.clearScore();\n        $(\".a-wrapper\").remove();\n        $(\".q-wrapper\").remove();\n        $(\".q-header\").remove();\n        this.clearTimer();\n        this.startTimer();\n\n        let i, j;\n\n        // let arrQuestions = [];\n\n        // console.log(data);\n\n        let arrQuestions = data;\n\n        for (i = 0; i < arrQuestions.length; i++) {\n\n            arrQuestions[i].answered = 0;\n\n            for (j = 0; j < arrQuestions[i].arrAnswers.length; j++) {\n                arrQuestions[i].arrAnswers[j].clicked = 0;\n            }\n        }\n\n        this.setState({\n            currentQuestion: 0,\n        })\n\n        this.nextQuestion(arrQuestions);\n    }\n\n\n    nextQuestion() {\n\n        if (this.state.currentQuestion === 50) {\n            this.lastQuestion();\n        } else {\n            let q = this.state.strQuestions[this.state.currentQuestion];\n\n            this.constructQuestionPanel(q)\n\n            $(\"#questionCount\").html(this.state.currentQuestion + 1 + \"/\" + this.state.strQuestions.length + \" \");\n        }\n    }\n\n    constructQuestionPanel(q) {\n\n        let qText = q.qText;\n\n        let aHtml = \"\";\n        let qHtml = \"\";\n        let bHtml = \"\";\n\n        qHtml = \"<div class='q-container' >\";\n\n        for (let i = 0; i < q.arrAnswers.length; i++) {\n            var a = q.arrAnswers[i];\n            if (a.correct === \"1\") {\n                this.setState({\n                    corrId: a.id,\n                })\n            }\n            aHtml = aHtml + this.constructAnswer(a.aText, a.id, a.clicked, a.correct)\n        }\n\n        if (q.questionLayout === 1) {\n            // bHtml = \"<div id='divTextAfter'></div><div id='btnPrevious' class='btnBrowse' style='float:left; margin-right:2em'><<</div><div id='btnNext' class='btnBrowse' style='float: left; margin-right:3.3em'>>></div>\";\n\n            aHtml = '<div class=\"a-wrapper qi\">' + aHtml + bHtml + '</div>'\n\n            qHtml = \"<div class='q-header' > \" + qText + \"</div><div class='q-wrapper' style='padding-left:20px'>\" + qHtml + aHtml + \"</div>\";\n\n            this.state.container.append(qHtml);\n        }\n\n        if (q.answered === 0) {\n            $(\".answer\").addClass(\"activeanswer\");\n            $(\"#btnNext\").hide();\n        }\n\n        if (this.state.currentQuestion === q.length - 1) {\n            $(\"#btnNext\").hide();\n        }\n\n        var ah = $(\".answer\").height();\n        var aw = $(\".answer\").width();\n\n        $(\".a-content\").css(\"width: \" + aw + \"px\");\n\n        $(\".a-content img\").css(\"height: \" + ah * .8 + \"px\");\n\n        if (this.state.currentQuestion === 0) {\n            $(\"#btnPrevious\").hide();\n        }\n\n        let data = this.state;\n\n        $(\".answer\").on(\"click\", data, (e) => {\n\n            let parse = parseInt(e.currentTarget.id);\n\n            this.setState({\n                thisId: parse,\n            });\n\n            // console.log('thisID ' + this.state.thisId);\n\n            this.setState({\n                clicked: this.state.strQuestions[data.currentQuestion].arrAnswers[this.state.thisId].clicked,\n            });\n\n            this.setState({\n                clicked: 1,\n            });\n\n            let tC = this.state.totalClicks;\n            tC++;\n            this.setState({\n                totalClicks: tC,\n            });\n\n            this.setState({\n                answered: this.state.strQuestions[data.currentQuestion].answered,\n            });\n\n            // console.log('answered ' + this.state.answered);\n\n            // console.log('data ' + data.corrId);\n\n            if (this.state.answered === 0) {\n\n                if (data.corrId === this.state.thisId) {\n\n                    // console.log('correct');\n\n                    this.setState({\n                        answered: 1,\n                    })\n\n                    // console.log('next ' + this.state.answered);\n\n                    let cC = data.correctClicks;\n                    cC++;\n                    this.setState({\n                        correctClicks: cC,\n                    });\n\n                    $(\"#\" + this.state.thisId).addClass(\"correct\");\n                    $(\"#\" + this.state.thisId).removeClass(\"activeanswer\");\n\n                    $(\".answer\").off();\n\n                    let cQ = data.currentQuestion;\n                    cQ++;\n                    this.setState({\n                        currentQuestion: cQ,\n                    });\n\n                    if (this.state.strQuestions.length > data.currentQuestion) {\n                        $(\"#btnNext\").show();\n                    }\n\n                    if (this.state.strQuestions.length > data.currentQuestion) {\n\n                        $(\".q-wrapper\").fadeOut(1200, (e) => {\n\n                            $(\".q-wrapper\").remove();\n                            $(\".q-header\").remove();\n\n                            this.nextQuestion();\n\n                        })\n\n                    } else {\n                        let cQ = data.currentQuestion;\n                        cQ--;\n                        this.setState({\n                            currentQuestion: cQ,\n                        });\n\n                        $(\".activeanswer\").removeClass(\"activeanswer\");\n                        this.updateTimer();\n                        this.updateScore();\n                    }\n                } else {\n\n                    // console.log('wrong');\n\n                    $(\"#\" + this.state.thisId).addClass(\"wrong\");\n                    $(\"#\" + this.state.thisId).removeClass(\"activeanswer\");\n\n                    let wC = data.wrongClicks;\n                    wC++;\n                    this.setState({\n                        wrongClicks: wC,\n                    });\n\n                    $(\"#\" + this.state.thisId).animate({ opacity: 0.75 }, 1000);\n                    $(\"#\" + this.state.thisId).off();\n                }\n                this.updateTimer();\n                this.updateScore();\n            }\n        })\n\n        // $(\"#btnNext\").on(\"click\", data, () => {\n        //     console.log('next');\n        //     console.log(data.currentQuestion);\n\n        //     let cQ = data.currentQuestion;\n        //     cQ++;\n        //     this.setState({\n        //         currentQuestion: cQ,\n        //     });\n\n        //     console.log('next q ' + this.state.currentQuestion);\n\n        //     $(\".q-wrapper\").remove();\n        //     $(\".q-header\").remove();\n        //     this.nextQuestion(data);\n        // })\n\n        // $(\"#btnPrevious\").on(\"click\", data, (e) => {\n        //     console.log('previous');\n        //     let cQ = data.currentQuestion;\n        //     cQ--;\n        //     this.setState({\n        //         currentQuestion: cQ,\n        //     });\n\n        //     console.log('previous q ' + this.state.currentQuestion);\n\n        //     $(\".q-wrapper\").remove();\n        //     $(\".q-header\").remove();\n        //     this.nextQuestion(data);\n        // })\n\n    }\n\n    constructAnswer(aTxt, aId, aClicked, aCorrect) {\n\n        var cellHtml;\n\n        var extraClass = '';\n\n        if (aClicked === 1 && aCorrect === 0) extraClass = 'wrong';\n        if (aClicked === 1 && aCorrect === 1) extraClass = 'correct';\n\n        cellHtml = \"<div class='answer'\" + extraClass + \"id='\" + aId + \"' ><div class='a-content' ><div class='text'>\" + aTxt + \"</div></div></div>\";\n\n        return cellHtml;\n    }\n\n    typeCheck(e) {\n        if (typeof e === 'string') {\n            console.log('string');\n        } else if (typeof e === 'number') {\n            console.log('integer');\n        } else {\n            console.log('what are you');\n        };\n    }\n\n    lastQuestion() {\n        // this.setState({\n        //     currentQuestion: 50,\n        // })\n\n        if (this.state.currentQuestion === 50) {\n            // this.clearTimer();\n            console.log('end game');\n            $('#HUD').hide();\n            $('.q-header').hide();\n            $('.q-container').hide();\n            $('#optionsRight').hide();\n\n            // this.setState({\n            //     end: new Date()\n            // })\n\n            // let e = this.state.end;\n\n            // console.log('e ' + e);\n\n            // let gameDuration = new Date() - e;\n\n            // console.log('gameDuration ' + gameDuration);\n\n            // let totalSeconds = Math.round(gameDuration / 1000);\n            // var minutes = Math.floor(totalSeconds / 60);\n            // var seconds = totalSeconds % 60;\n            // var pad = \"00\";\n            // pad = pad.toString();\n            // seconds = seconds.toString();\n            // seconds = pad.substring(0, pad.length - seconds.length) + seconds;\n            // let nT = minutes + \":\" + seconds;\n\n            // console.log('newtime ' + nT);\n\n            // this.setState({\n            //     newTime: nT\n            // })\n\n            clearTimeout(this.state.gameTime);\n\n            let eText = 'End of Quiz!'\n\n            let end = \"<div class='q-wrapper' style='font-size:18px'></div><div class='final'>\" + eText + \"</div>\";\n\n            let fScore = this.state.score;\n\n            let fS = \"<div class='q-wrapper' style='font-size:18px'></div><div class='fScore'>Final Score: \" + fScore + \"%</div>\";\n\n            let fT = \"<div class='q-wrapper' style='font-size:18px'></div><div class='fTime'>Time: \" + this.state.newTime + \"</div>\";\n\n            this.state.container.append(end);\n            this.state.container.append(fS);\n            this.state.container.append(fT);\n\n        }\n        // else {\n        //     this.setState({\n        //         end: new Date()\n        //     })\n\n        //     let e = this.state.end;\n\n        //     console.log('e1 ' + e);\n\n        //     let gameDuration = new Date() - e;\n\n        //     console.log('gameDuration1 ' + gameDuration);\n\n        //     let totalSeconds = Math.round(gameDuration / 1000);\n        //     minutes = Math.floor(totalSeconds / 60);\n        //     seconds = totalSeconds % 60;\n        //     pad = \"00\";\n        //     pad = pad.toString();\n        //     seconds = seconds.toString();\n        //     seconds = pad.substring(0, pad.length - seconds.length) + seconds;\n        //     let nT = minutes + \":\" + seconds;\n\n        //     console.log('newtime1 ' + nT);\n\n        //     await this.setState({\n        //         newTime: nT\n        //     })\n\n        //     console.log('newtime1.1 ' + nT);\n\n        // }\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <div className=\"title-wrapper\">\n                    <p className=\"title\">React U.S. State Capital Quiz</p>\n                </div>\n                <div className=\"gamewindow\" style={{ marginTop: + '0', minHeight: + '500' }}>\n                    <div id=\"gamewrapper\" style={{ position: 'relative', backgroundColor: '#deded7', width: '100%', minHeight: + '500' }}>\n\n                        <div id=\"HUD\">\n                            <span id=\"timer\"></span>\n                            <span id=\"score\"></span>\n                            <span id=\"questionCount\"></span>\n                        </div>\n                        <div className=\"q-header\"></div>\n                        <div className=\"q-wrapper\" style={{ paddingLeft: + '20' }}>...</div>\n\n\n                    </div> <button onClick={() => { this.setupGame(); }} id=\"restart\" style={{ cursor: 'pointer' }}>Restart</button>\n                </div>\n\n                {/* <div id=\"optionsRight\" style={{ paddingRight: + '50', clear: 'both' }}>\n                    <span>&nbsp;&nbsp;\n                    <button onClick={() => { this.setupGame(); }} id=\"restart\" style={{ cursor: 'pointer' }}>Restart</button>\n                    </span>\n                    <div id=\"pnlRestart\">\n                    </div>\n                    <button onClick={() => { this.stopTimer(); }}\n                        className=\"stopTimer\">Pause</button>\n                    <button onClick={() => { this.lastQuestion(); }}\n                        className=\"stopTimer\">Last</button>\n                </div> */}\n            </Fragment>\n\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}